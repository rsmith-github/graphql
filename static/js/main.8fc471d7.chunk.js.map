{"version":3,"sources":["components/LineChart.js","components/BarChart.js","App.js","reportWebVitals.js","index.js"],"names":["LineChart","_ref","data","height","width","numberOfHorizontalGuides","horizontalGuides","numberOfVerticalGuides","verticalGuides","precision","setAmount","amount","setExercise","exercise","FONT_SIZE","maximumXFromData","Math","max","apply","Object","toConsumableArray","map","e","x","maximumYFromData","y","digits","parseFloat","toString","toFixed","length","padding","chartWidth","chartHeight","points","element","concat","join","Axis","_ref2","react_default","a","createElement","fill","stroke","strokeWidth","XAxis","YAxis","VerticalGuides","guideCount","startY","endY","Array","_","index","xCoordinate","Fragment","key","HorizontalGuides","startX","endX","yCoordinate","LabelsXAxis","_useState","useState","_useState2","slicedToArray","hover","setHover","style","overflow","onMouseEnter","onClick","label","onMouseLeave","className","fontSize","fontFamily","transform","cursor","LabelsYAxis","PARTS","viewBox","defaultProps","Chart","children","react_responsive_default","minWidth","maxWidth","Bar","_ref2$fill","name","color","skill_points","display","border","BarChart","_ref3","datum","reduce","acc","cur","BarChart_Chart","BarChart_Bar","client","QueryClient","endpoint","Profile","_useQuery","useQuery","request","isLoading","error","id","message","user","login","transaction","filter","type","School","Ratio","_useQuery2","skillsArray","cleanUpSkills","index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","infinite","skill","ind","textAlign","marginBottom","justifyContent","gap","projects_completed","Projects","_useQuery3","project","object","Graph1","_useState3","_useState4","_useQuery4","Data","forEach","temp","push","components_LineChart","Graph2","_useQuery5","components_BarChart","_useQuery6","result","path","split","skills","values","App","es","class","text-anchor","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8fc471d7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useState } from 'react';\nimport { NoUndefinedVariablesRule } from \"graphql\";\n\nconst STROKE = 1;\n\nconst LineChart = ({\n  data,\n  height,\n  width,\n  horizontalGuides: numberOfHorizontalGuides,\n  verticalGuides: numberOfVerticalGuides,\n  precision,\n  amount,\n  setAmount,\n  exercise,\n  setExercise,\n}) => {\n  const FONT_SIZE = width / 50; // font size based on width\n  const maximumXFromData = Math.max(...data.map(e => e.x)); // Getting the largest x value. (as formatted from data)\n  const maximumYFromData = Math.max(...data.map(e => e.y)); // Getting the largest y value. e.g. 3438 for xp in piscine-go\n\n  // Get maxY with 2 decimals precision.\n  const digits = parseFloat(maximumYFromData.toString()).toFixed(precision).length + 1;\n\n  const padding = (FONT_SIZE + digits) * 3; // padding should be font size + digits * 3. Not sure why? must test.\n  const chartWidth = width - padding * 2; // chart width should be width - padding * 2 \n  const chartHeight = height - padding * 2; // height  should be height - padding - 2\n\n\n\n  // Data is a list of objects:\n  // data.transaction.forEach(transaction => {\n  //   let temp = {\n  //     label: transaction.object.name,\n  //     x: ind,\n  //     y: transaction.amount\n  //   };\n  //   Data.push(temp)\n  //   ind++;\n  // });\n\n  const points = data.map(element => {\n    const x = (element.x / maximumXFromData) * chartWidth + padding;\n    const y = chartHeight - (element.y / maximumYFromData) * chartHeight + padding;\n\n    return `${x},${y}`;\n  }).join(\" \");\n\n  const Axis = ({ points }) => (\n    <polyline fill=\"none\" stroke=\"#ccc\" strokeWidth=\".5\" points={points} />\n  );\n\n  const XAxis = () => (\n    <Axis\n      points={`${padding},${height - padding} ${width - padding},${height -\n        padding}`} />\n  );\n\n  const YAxis = () => (\n    <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  );\n\n  const VerticalGuides = () => {\n    const guideCount = numberOfVerticalGuides || data.length - 1;\n\n    const startY = padding;\n    const endY = height - padding;\n\n    return new Array(guideCount).fill(0).map((_, index) => {\n      const ratio = (index + 1) / guideCount;\n\n      const xCoordinate = padding + ratio * (width - padding * 2);\n\n      return (\n        <React.Fragment key={index}>\n          <polyline\n            fill=\"none\"\n            stroke=\"#ccc\"\n            strokeWidth=\".5\"\n            points={`${xCoordinate},${startY} ${xCoordinate},${endY}`}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  const HorizontalGuides = () => {\n    const startX = padding;\n    const endX = width - padding;\n\n    return new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\n      const ratio = (index + 1) / numberOfHorizontalGuides;\n\n      const yCoordinate = chartHeight - chartHeight * ratio + padding;\n\n      return (\n        <React.Fragment key={index}>\n          <polyline\n            fill=\"none\"\n            stroke={\"#ccc\"}\n            strokeWidth=\".5\"\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2;\n\n    return data.map((element, index) => {\n      const x =\n        (element.x / maximumXFromData) * chartWidth + padding - FONT_SIZE / 2;\n\n      const [hover, setHover] = useState()\n\n      return (\n        // https://stackoverflow.com/questions/52930830/is-there-a-way-to-reliably-rotate-svg-text-within-a-resizable-graphic\n        <svg x={x} y={y - 15}\n          style={{\n            overflow: \"visible\",\n            height: '5px',\n            width: '5px',\n          }}\n        >\n          <text\n            onMouseEnter={() => {\n\n              setHover(true)\n\n            }}\n            onClick={() => {\n              setAmount(element.y)\n              setExercise(element.label)\n            }}\n            onMouseLeave={() => setHover(false)}\n            key={\"text-\" + index}\n            className={`xtext`}\n            style={{\n              fill: hover ? \"#61dafb\" : \"white\",\n              fontSize: hover ? FONT_SIZE + 1 : FONT_SIZE,\n              fontFamily: \"Helvetica\",\n              transform: 'rotate(45deg)',\n              cursor: \"pointer\",\n            }}\n          >\n            {element.label}\n          </text>\n        </svg>\n\n      );\n    });\n  };\n\n\n  const LabelsYAxis = () => {\n    const PARTS = numberOfHorizontalGuides;\n    return new Array(PARTS + 1).fill(0).map((_, index) => {\n      const x = FONT_SIZE;\n      const ratio = index / numberOfHorizontalGuides;\n\n      const yCoordinate =\n        chartHeight - chartHeight * ratio + padding + FONT_SIZE / 2;\n      return (\n        <text\n          key={index}\n          x={x}\n          y={yCoordinate}\n          style={{\n            fill: \"white\",\n            fontSize: FONT_SIZE,\n            fontFamily: \"Helvetica\"\n          }}\n        >\n          {parseFloat(maximumYFromData * (index / PARTS)).toFixed(precision)}\n        </text>\n      );\n    });\n  };\n\n  return (\n    <svg\n      viewBox={`0 30 ${width} ${height}`}\n    //style={{ border: \"0.5px solid #ccc\" }}\n    >\n      <XAxis />\n      <LabelsXAxis />\n      <YAxis />\n      <LabelsYAxis />\n      {numberOfVerticalGuides && <VerticalGuides />}\n      <HorizontalGuides />\n\n      <polyline\n        fill=\"none\"\n        stroke=\"#61dafb\"\n        strokeWidth={STROKE}\n        points={points}\n      />\n    </svg>\n  );\n};\n\nLineChart.defaultProps = {\n  height: 200,\n  width: 500,\n  horizontalGuides: 4,\n  verticalGuides: null,\n  precision: 2\n};\n\nLineChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number,\n      label: PropTypes.string\n    })\n  ).isRequired,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  horizontalGuides: PropTypes.number,\n  verticalGuides: PropTypes.number,\n  precision: PropTypes.number\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { useState } from 'react';\nimport MediaQuery from \"react-responsive\";\n\n\nconst Chart = ({ children, height, width }) => {\n    return (\n        <>\n            <MediaQuery minWidth={1271}>\n                <svg viewBox={`-50 -20 ${width} ${height + 100}`} height={height} width={width} className=\"graph2\">\n                    {children}\n                </svg>\n            </MediaQuery>\n\n            <MediaQuery minWidth={1029} maxWidth={1270}>\n                <svg viewBox={`-100 0 ${width + 100} ${height + 100}`} height={height} width={width - 150} className=\"graph2\">\n                    {children}\n                </svg>\n            </MediaQuery>\n\n            <MediaQuery minWidth={875} maxWidth={1028}>\n                <svg viewBox={`-125 0 ${width + 100} ${height + 100}`} height={height} width={width - 250} className=\"graph2\">\n                    {children}\n                </svg>\n            </MediaQuery>\n\n\n            <MediaQuery minWidth={600} maxWidth={875}>\n                <svg viewBox={`60 70 ${width + 50} ${height + 100}`} height={height - 100} width={width + 150} className=\"graph2\">\n                    {children}\n                </svg>\n            </MediaQuery>\n\n            <MediaQuery minWidth={401} maxWidth={599}>\n                <svg viewBox={`-60 70 ${width + 50} ${height + 100}`} height={height - 100} width={width - 200} className=\"graph2\">\n                    {children}\n                </svg>\n            </MediaQuery>\n            <MediaQuery maxWidth={400}>\n                <svg viewBox={`190 -34 ${width - 200} ${height + 200}`} height={height - 120} width={width - 200} className=\"graph2\">\n                    {children}\n                </svg>\n            </MediaQuery>\n\n        </>\n\n    )\n}\n\nconst Bar = ({ fill = 'white', x, y, height, width, name, color, skill_points }) => {\n\n    const [hover, setHover] = useState(false);\n\n    return (\n        <>\n            <rect fill={fill} x={x} y={y} height={height} width={width} style={{ fill: hover ? color : \"teal\" }} />\n            <rect fill={'transparent'} x={x} y={0} height={height + y} width={width}\n                onMouseEnter={() => setHover(true)}\n                onMouseLeave={() => setHover(false)}\n                style={{ cursor: 'pointer' }}\n            />\n\n            <text x={x} y={y}\n                style={{\n                    fill: 'white',\n                    display: hover ? \"block\" : \"none\",\n                    fontSize: \"25px\",\n                }}\n                onMouseEnter={() => setHover(true)}\n            >\n                {skill_points}</text>\n            <svg x={x + 10} y={y + height + 20} style={{ overflow: 'auto' }}>\n                <rect x={0} y={3} width={width} height={5} fill={color} stroke={color} style={{ transform: \"rotate(45deg)\" }} />\n                <text\n                    style={{\n                        fill: \"white\",\n                        transform: 'rotate(45deg)',\n                        border: `solid 1px ${color}`\n                    }}\n                >\n                    {\n                        name === \"Game Development\" ? \"Game Dev.\" :\n                            name === \"Systems Administration\" ? \"Sys. Admin\" :\n                                name\n                    }\n                </text>\n            </svg>\n        </>\n    )\n}\n\nconst greatestValue = values =>\n    values.reduce((acc, cur) => (cur > acc ? cur : acc), -Infinity)\n\nconst BarChart = ({ data }) => {\n    const barWidth = 35\n    const barMargin = 15\n    const width = data.length * (barWidth + barMargin)\n    const height = greatestValue(data.map(datum => datum.skill_points))\n\n    return (\n\n\n        <Chart height={height} width={width}>\n            {data.map((datum, index) => (\n                <Bar\n                    key={datum.name}\n                    fill=\"teal\"\n                    x={index * (barWidth + barMargin) - 50}\n                    y={height - datum.skill_points}\n                    width={barWidth}\n                    height={datum.skill_points}\n                    name={datum.name}\n                    color={datum.color}\n                    skill_points={datum.skill_points} />\n            ))}\n        </Chart>\n\n\n\n    )\n}\n\nexport default BarChart;\n","import './App.css';\n\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { request } from \"graphql-request\";\nimport { useQuery, QueryClient, QueryClientProvider } from \"react-query\";\nimport MediaQuery from \"react-responsive\";\n\n\n// Carousel\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\n// import LineChart from './LineChart';\nimport LineChart from \"./components/LineChart\";\nimport BarChart from \"./components/BarChart\";\n\nconst client = new QueryClient();\nconst endpoint = \"https://learn.01founders.co/api/graphql-engine/v1/graphql\";\n\nfunction App() {\n\n  return (\n    <QueryClientProvider client={client}>\n\n      {/* https://codepen.io/ANAMAFLA/pen/eYJbGpd */}\n      <div class=\"patterns\">\n        <svg width=\"100%\" height=\"30%\">\n          <text x=\"50%\" y=\"80%\" text-anchor=\"middle\">\n            GraphQL\n          </text>\n        </svg>\n      </div>\n\n      <div className=\"App\">\n        <Profile />\n        <Ratio />\n        <Projects />\n        <Graph1 />\n        <Graph2 />\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nexport function Profile() {\n\n  const USERS_QUERY = `\n  {\n        user(where: { id: { _eq: 1954 }}){\n          id\n          login\n        }\n        transaction(where: { userId: { _eq: 1954 }, path: {_like: \"%real-time-forum\"}, type: {_eq: \"level\"}}){\n          userId\n          type\n          amount\n        }\n  }\n  `;\n\n  const { data, isLoading, error } = useQuery(\"users\", () => {\n    return request(endpoint, USERS_QUERY);\n  });\n\n  if (isLoading) return (\n    <div className='page top-left' id='profile'>\n      {/* <p>Loading...</p> */}\n    </div>\n  );\n  if (error) return <pre>{error.message}</pre>;\n\n  return (\n    <div className='page top-left' id='profile'>\n      {data.user.map((user) => (\n        <><h2 id='profile-header'>ID: <span style={{ color: 'white' }}>{user.id}</span></h2><h2>Login: <span style={{ color: 'white' }}>{user.login}</span></h2></>\n      ))}\n      <br></br>\n      {data.transaction.filter((transaction, index) => transaction.amount === 19).map((transaction) => (\n        <h2 id='level'>{transaction.type}: <span style={{ color: 'white' }}>{transaction.amount}</span></h2>\n      ))}\n      <School />\n    </div>\n  );\n}\n\n// Skills data (carousel)\nexport function Ratio() {\n\n  const SKILLS_QUERY = `\n    {\n      transaction(where: { userId: { _eq: 1954 }, type: {_like: \"%skill%\"}}){\n        type\n        amount\n      }\n      \n    }\n  `;\n\n  const { data, isLoading, error } = useQuery(\"skills\", () => {\n    return request(endpoint, SKILLS_QUERY);\n  });\n\n  if (isLoading) return (\n    <div className='page top-center' id='profile'>\n      {/* <p>Loading...</p> */}\n    </div>\n  );\n  if (error) return <pre>{error.message}</pre>;\n\n\n  let skillsArray = cleanUpSkills(data)\n\n  return (\n    <div className='page top-center' id='ratio'>\n      <h2>Skills</h2>\n      <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={27}\n        totalSlides={skillsArray.length}\n        infinite={true}\n      >\n        <Slider>\n\n          {skillsArray.map((skill, ind) => (\n            <Slide index={ind} className={\"sldr-slide\"}>\n              <p className='skill-type' style={{ color: `${skill.color}`, textAlign: 'center', fontSize: \"25px\", marginBottom: '10px' }}>\n                {skill.name}\n              </p>\n              <div style={{ display: 'flex', justifyContent: 'center', gap: '30px' }}>\n                <p>\n                  <span>Total Skill Points: </span> <span className='number'>{skill.skill_points}</span>\n                </p>\n                <p>\n                  <span>Projects completed: </span> <span className='number'>{skill.projects_completed}</span>\n                </p>\n              </div>\n            </Slide>\n          ))}\n        </Slider>\n        <div className='crslBtnContainer'>\n          <ButtonBack className='sliderBtn'>&#8249;</ButtonBack>\n          <ButtonNext className='sliderBtn'>&#8250;</ButtonNext>\n        </div>\n      </CarouselProvider>\n    </div>\n\n  );\n}\n\n\n// Projects in piscine-go\nexport function Projects() {\n\n  const PROJECTS_QUERY = `\n  {\n      transaction(where: { userId: { _eq: 1954 }, path: {_like: \"%piscine-go/quest-%\"}}){\n          type\n          amount\n          objectId\n          createdAt\n          object {\n          id\n            name\n          }\n      }\n  }\n  `;\n\n  const { data, isLoading, error } = useQuery(\"projects\", () => {\n    return request(endpoint, PROJECTS_QUERY);\n  });\n\n  if (isLoading) return (\n    <div className='page top-right' id='projects'>\n      {/* <p>Loading...</p> */}\n    </div>\n\n  );\n  if (error) return <pre>{error.message}</pre>;\n\n\n  return (\n    <div className='page top-right' id='projects'>\n      <h2>XP in Piscine-Go</h2>\n      <div style={{ overflow: 'auto', height: '185px' }}>\n        {data.transaction.map((project) => (\n          <div>\n            <p key={\"project-\" + project.id}>\n              <span>Challenge Name: </span>{project.object.name}\n            </p>\n            <p>\n              <span>XP: </span>{project.amount} <span>kB</span>\n            </p>\n            <br></br>\n          </div>\n        ))}\n      </div>\n    </div >\n  );\n}\n\n\n\nconst styles = {\n  chartComponentsContainer: {\n    display: 'grid', gridTemplateColumns: 'max-content 700px', alignItems: 'center'\n  },\n  chartWrapper: { maxWidth: 700, alignSelf: 'flex-start' }\n}\n\n\nexport function Graph1() {\n\n  const [amount, setAmount] = useState()\n  const [exercise, setExercise] = useState()\n\n\n  const PROJECTS_QUERY = `\n  {\n      transaction(where: { userId: { _eq: 1954 }, path: {_like: \"%piscine-go/quest-%\"}}){\n          type\n          amount\n          objectId\n          createdAt\n          object {\n            id\n            name\n          }\n      }\n  }\n  `;\n\n  const { data, isLoading, error } = useQuery(\"piscine-go\", () => {\n    return request(endpoint, PROJECTS_QUERY);\n  });\n\n\n  if (isLoading) return (\n\n    <div className='page bottom-left' id='Graph1'>\n      {/* <p>Loading...</p> */}\n    </div>\n\n  );\n  if (error) return <pre>{error.message}</pre>;\n\n\n\n  const Data = [];\n\n\n  data.transaction.forEach((transaction, ind) => {\n    if (ind < 30) {\n      let temp = {\n        label: transaction.object.name,\n        x: ind,\n        y: transaction.amount\n      };\n      Data.push(temp)\n    }\n  });\n\n\n\n  return (\n\n    <div className='page bottom-left' id='Graph1'>\n      <>\n        <h2>XP Gained - First 30 Exercises (Piscine-Go)</h2>\n        <LineChart\n          width={500}\n          height={300}\n          data={Data}\n          horizontalGuides={15}\n          verticalGuides={15}\n          precision={2}\n          amount={amount}\n          setAmount={setAmount}\n          exercise={exercise}\n          setExercise={setExercise}\n        />\n        {\n          amount &&\n          <p>{exercise}: <span>{amount}</span></p>\n        }\n        {\n          !amount &&\n          <p>Exercise: <span>N/A</span> </p>\n        }\n      </>\n    </div >\n  );\n}\n\nexport function Graph2() {\n\n  const PROJECTS_QUERY = `\n  {\n    transaction(where: { userId: { _eq: 1954 }, type: {_like: \"%skill%\"}}){\n      type\n      amount\n    }\n  }\n  `;\n\n  const { data, isLoading, error } = useQuery(\"skillsGraph2\", () => {\n    return request(endpoint, PROJECTS_QUERY);\n  });\n\n  if (isLoading) return (\n\n    <div className='page bottom-right' id='Graph2'>\n      {/* <p>Loading...</p> */}\n    </div>\n\n  );\n  if (error) return <pre>{error.message}</pre>;\n\n  let skillsArray = cleanUpSkills(data)\n\n  return (\n    <div className='page bottom-right' id='Graph2'>\n      <h2>Skills Chart</h2>\n\n      <BarChart data={skillsArray} />\n\n    </div >\n  );\n}\n\n\nexport function School() {\n  const SCHOOL_QUERY = `\n  {\n    result{\n      path\n    }\n  }\n  `\n\n  const { data, isLoading, error } = useQuery(\"schoolQuery\", () => {\n    return request(endpoint, SCHOOL_QUERY)\n  })\n\n  if (isLoading) return (\n    <p></p>\n  );\n  if (error) return <pre>{error.message}</pre>;\n\n  return (\n    <>\n      <span className='campusText'>Campus: &nbsp;</span>\n      <p className='schoolName'>{data.result[0].path.split(\"/\")[1]}</p>\n    </>\n  )\n\n}\n\n\n\n\n\n// format skills and return cumulative skill points for each skill.\nfunction cleanUpSkills(data) {\n  data.transaction.forEach(skill => {\n    switch (skill.type) {\n      case \"skill_algo\":\n        skill.type = \"Algorithms\"\n        skill.color = \"teal\"\n        break;\n      case \"skill_prog\":\n        skill.type = \"Programming\"\n        skill.color = \"#306998\"\n        break;\n      case \"skill_html\":\n        skill.type = \"HTML\"\n        skill.color = \"#e34c26\"\n        break;\n      case \"skill_css\":\n        skill.type = \"CSS\"\n        skill.color = \"#264de4\"\n        break;\n      case \"skill_js\":\n        skill.type = \"JavaScript\"\n        skill.color = \"#F0DB4F\"\n        break;\n      case \"skill_go\":\n        skill.type = \"Golang\"\n        skill.color = \"#29BEB0\"\n        break;\n      case \"skill_front-end\":\n        skill.type = \"Frontend\"\n        skill.color = \"#a4c639\"\n\n        break;\n      case \"skill_back-end\":\n        skill.type = \"Backend\"\n        skill.color = \"firebrick\"\n        break;\n      case \"skill_sql\":\n        skill.type = \"SQL\"\n        skill.color = \"#b100cd\"\n        break;\n      case \"skill_docker\":\n        skill.type = \"Docker\"\n        skill.color = \"#0db7ed\"\n        break;\n      case \"skill_sys-admin\":\n        skill.type = \"Systems Administration\"\n        skill.color = \"#DBE4EB\"\n        break;\n      case \"skill_game\":\n        skill.type = \"Game Development\"\n        skill.color = \"deeppink\"\n        break;\n      case \"skill_stats\":\n        skill.type = \"Statistics\"\n        skill.color = \"green\"\n        break;\n      default:\n        break;\n    }\n  })\n\n  let skills = {}\n\n  data.transaction.forEach(skill => {\n\n    // Cumulative skill points and projects completed\n    if (!!skills[skill.type]) {\n      skills[skill.type] = {\n        name: skill.type,\n        skill_points: skill.amount + skills[skill.type].skill_points,\n        projects_completed: skills[skill.type].projects_completed + 1,\n        color: skill.color\n      }\n\n    } else {\n      skills[skill.type] = {\n        name: skill.type,\n        skill_points: skill.amount,\n        projects_completed: 1,\n        color: skill.color\n      }\n    }\n\n  });\n\n  return Object.values(skills);\n\n\n}\n\n\n\n\n\n\n\nexport default App;\n\n\n\n// different query\n// user(where: { id: { _eq: 1954 }}){\n//   id\n//   login\n// }\n// result(where: { userId: { _eq: 1954 } }){\n//   userId\n//   userLogin\t\n//   type\n//   grade\n//   path\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}